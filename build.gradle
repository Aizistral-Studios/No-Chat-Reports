plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id "com.matthewprenger.cursegradle" version "1.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/nochatreports.accesswidener")
}

repositories {
		maven { url "https://maven.shedaniel.me/" }
		maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	include(fabricApi.module("fabric-api-base", project.fabric_version))
	modImplementation include(fabricApi.module("fabric-networking-api-v1", project.fabric_version))
	modImplementation include(fabricApi.module("fabric-screen-api-v1", project.fabric_version))
	modImplementation include(fabricApi.module("fabric-rendering-v1", project.fabric_version))
	modImplementation include(fabricApi.module("fabric-resource-loader-v0", project.fabric_version))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// withSourcesJar()
}

task testJar (type: Jar) {
	classifier = 'test'
	from sourceSets.test.output
	testJar.finalizedBy('prepareRemapJar')
	testJar.finalizedBy('remapJar')

	from("LICENSE") {
		// NO-OP
	}
	
	doFirst {
		remapJar.classifier = 'test-reobf'
		remapJar.inputFile = testJar.outputs.files.singleFile
	}
}

jar {

	from("LICENSE") {
		// NO-OP
	}
}

curseforge {

    project {
		println("Pushing CurseGradle specifications for project ID: ${curse_id}")	
	
		// Specified as cmd argument
        apiKey = findProperty('curseKey') ?: 'none'
        
		id = "${curse_id}"
        releaseType = "${curse_release}"
        changelogType = 'html'
        changelog = file('docs/changelog.html')
		mainArtifact(remapJar)
		
		addGameVersion '1.19.2'
		addGameVersion '1.19.1'
		addGameVersion 'Fabric'
		addGameVersion 'Quilt'
		addGameVersion 'Java 17'
		
		relations {
			embeddedLibrary 'fabric-api'
			optionalDependency 'modmenu'
			optionalDependency 'cloth-config'
		}
		
		afterEvaluate {
			uploadTask.dependsOn(remapJar)
		}
		
		//debug = true
        //addArtifact(sourcesJar)
        //addArtifact(apiJar)
    }
	
	options {
		forgeGradleIntegration = false
	}
}

modrinth {
    token = findProperty('modrinthKey') ?: 'none'
    projectId = "no-chat-reports"
    versionNumber = "Fabric-" + project.mod_version
	versionName = "No Chat Reports Fabric-" + project.mod_version
    versionType = "release"
	changelog = rootProject.file("docs/changelog.html").text
    uploadFile = remapJar
    gameVersions = ["1.19.2", "1.19.1"]
	loaders = ['fabric', 'quilt']
	
	dependencies {
		// The scope can be `required`, `optional`, or `incompatible`
		embedded.project "fabric-api"
		optional.project "modmenu"
		optional.project "cloth-config"
    }
	
	//syncBodyFrom = rootProject.file("docs/README.md").text
}

afterEvaluate {
	upload.dependsOn(remapJar)
}

task upload {
	dependsOn('modrinth')
	dependsOn('curseforge')
}
